#!/bin/bash
#
# [QuickBox ARM64 ruTorrent Updater]
#
# GitHub:   https://github.com/amefs/quickbox-arm64
# Author:   Amefs
# Current version:  v1.1.2
# URL:
# Original Repo:    https://github.com/QuickBox/QB
# Credits to:       QuickBox.io
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
#################################################################################
################################################################################
# HELP FUNCTIONS
################################################################################
export NEWT_COLORS='
root=,black
window=,lightgray
shadow=,color8
title=color8,
checkbox=,magenta
entry=,color8
label=blue,
actlistbox=,magenta
actsellistbox=,magenta
helpline=,magenta
roottext=,magenta
emptyscale=magenta
disabledentry=magenta,
'

_norm=$(tput sgr0)
_red=$(tput setaf 1)
_green=$(tput setaf 2)
_tan=$(tput setaf 3)
_cyan=$(tput setaf 6)

function _execute() {
	($1 >>"${OUTTO}" 2>&1)
}
function _print() {
	printf "${_norm}%s${_norm}\n" "$@"
	printf "%s\n" "$@" >>"${OUTTO}"
}
function _info() {
	printf "${_cyan}➜ %s${_norm}\n" "$@"
	printf ">> Info: %s\n" "$@" >>"${OUTTO}"
}
function _success() {
	printf "${_green}✓ %s${_norm}\n" "$@"
	printf ">> Success: %s\n" "$@" >>"${OUTTO}"
}
function _warning() {
	printf "${_tan}⚠ %s${_norm}\n" "$@"
	printf ">> Warning: %s\n" "$@" >>"${OUTTO}"
}
function _error() {
	printf "${_red}✗ %s${_norm}\n" "$@"
	printf ">> Error: %s\n" "$@" >>"${OUTTO}"
}

#################################################################################
# APP VARIABLE
#################################################################################
APP_TITLE="ruTorrent"
APP_NAME="rutorrent"

APP_LOCK=.$APP_NAME.lock
OUTTO=/srv/dashboard/db/output.log
BRANCH="https://github.com/Novik/ruTorrent.git"

################################################################################
# SCRIPT FUNCTIONS
################################################################################
function _usage() {
	echo -e "\nQuickBox ARM64 $APP_TITLE Updater"
	echo -e "\nUsage: \n$(basename "$0") [-h] [-l logfile]"
	echo -e "\nOptions:\n"
	echo "-l, --log <logfile>       specific log file"
	echo ""
	echo "-h, --help                display this help and exit"
}
################################################################################
# REMOVE FUNCTIONS
################################################################################
function _lockCheck() {
	if [[ -f "/install/.install.lock" ]]; then
		prevApp=$(cat /install/.install.lock)
		_info "$prevApp process running."
		_info "If you believe this to be in error, please manually remove the /install/.install.lock"
		_error "Exiting..."
		exit 1
	fi
	if [[ ! -f "/install/$APP_LOCK" ]]; then
		_error "${APP_TITLE} haven't installed ..."
		exit 1
	fi
}
function _setLock() {
	echo "${APP_TITLE}" >/install/.install.lock
}
function _lockCleanup() {
	rm -f /install/.install.lock
}

function _updateInfo() {
	_print "
$APP_TITLE will now be updated.

This process may take a few minutes
Please wait until the process is completed
"
}

function _installSystemUpdates() {
	_info "Checking and performing updates to system... "
	DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >/dev/null 2>&1
	DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >/dev/null 2>&1
	## auto solve lock
	if [ "$?" -eq 2 ]; then
		_warning "dpkg database is locked."
		_info "fixing dpkg lock..."
		rm -f /var/lib/dpkg/updates/0*
		locks=$(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*)
		if [[ ${locks} == $(find /var/lib/dpkg/lock* && find /var/cache/apt/archives/lock*) ]]; then
			for l in ${locks}; do
				rm -rf ${l}
			done
			_execute "dpkg --configure -a"
			DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" update >/dev/null 2>&1
			DEBIAN_FRONTEND=noninteractive apt-get -yqq -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade >/dev/null 2>&1
		fi
		if ! (apt-get check >/dev/null); then
			apt-get install -f >>"${OUTTO}" 2>&1
			if ! (apt-get check >/dev/null); then
				whiptail --title "$ERROR_TITLE_INSTALL" --msgbox "$ERROR_TEXT_INSTALL_1" --ok-button "$BUTTON_OK" 8 72
				exit 1
			fi
		fi
	fi
	_success "System updated."
}

function _installDepends() {
	if (! which 7z > /dev/null); then
		_installSystemUpdates
		_info "Installing ${APP_TITLE} dependencies..."
		_execute "apt-get install -y p7zip-full"
	fi
}

function _updateApp() {
	_info "Updating ${APP_TITLE}..."
	cd /srv || exit 1
	rm -rf /srv/$APP_NAME
	_execute "git clone --recurse-submodules $BRANCH $APP_NAME"
	rm -rf /srv/$APP_NAME/conf/config.php
	latest_release_version=$(curl -s https://api.github.com/repos/Novik/ruTorrent/releases/latest | jq -r ".tag_name")
	cd /srv/$APP_NAME/ || exit 1
	_info "Fetching $latest_release_version"
	_execute "git checkout $latest_release_version"
	chown -R www-data:www-data /srv/$APP_NAME
	cd /srv || exit 1

	_info "Setting up plugins... "
	plugin_lib="/usr/local/bin/quickbox/rutorrent/plugins/"
	rm -rf ${plugin_lib}
	if [[ ! -d ${plugin_lib} ]]; then
		cp -R /srv/$APP_NAME/plugins ${plugin_lib}
		if [[ ! -d ${plugin_lib}fileupload ]]; then
			_execute "sudo svn co https://github.com/nelu/rutorrent-thirdparty-plugins/trunk/fileupload ${plugin_lib}fileupload"
		fi
		if [[ ! -d ${plugin_lib}fileshare ]]; then
			_execute "sudo svn co https://github.com/nelu/rutorrent-thirdparty-plugins/trunk/fileshare ${plugin_lib}fileshare"
		fi
		if [[ ! -d ${plugin_lib}pausewebui ]]; then
			_execute "sudo svn co https://github.com/Gyran/rutorrent-pausewebui/trunk/ ${plugin_lib}pausewebui"
		fi
		if [[ ! -d ${plugin_lib}filemanager ]]; then
			# Pin to v1.0 ref: https://github.com/nelu/rutorrent-filemanager/issues/30
			_execute "sudo git clone -b v1.0 https://github.com/nelu/rutorrent-filemanager.git ${plugin_lib}filemanager"
			cat >${plugin_lib}filemanager/conf.php <<EOF
<?php

  global \$pathToExternals;
  \$config['mkdperm'] = 755; // default permission to set to new created directories
  \$config['show_fullpaths'] = false; // wheter to show userpaths or full system paths in the UI

  // set with fullpath to binary or leave empty
  \$pathToExternals['7zip'] = '/usr/bin/7z';
  \$pathToExternals['rar'] = '/usr/local/bin/rar';
  \$pathToExternals['unrar'] = '/usr/local/bin/unrar';
  \$pathToExternals['zip'] = '/usr/bin/zip';
  \$pathToExternals['unzip'] = '/usr/bin/unzip';
  \$pathToExternals['tar'] = '/usr/bin/tar';

  \$config['textExtensions'] = 'log|txt|nfo|sfv|xml|html';

  // see what 7zip extraction supports as type by file extension
  \$config['fileExtractExtensions'] = '(7z|bzip2|t?bz2|tgz|gz(ip)?|iso|img|lzma|rar|tar|t?xz|zip|z01|wim)(\.[0-9]+)?';

  // archive creation, see archiver man page before editing
  // archive.fileExt -> config
  \$config['archive']['type'] = [
      '7z' => [
          'bin' => '7zip',
          'compression' => [1, 5, 9],
      ],
      'rar' => [
          'bin' =>'rar',
          'compression' => range(0, 5),
      ]];

  \$config['archive']['type']['zip'] = \$config['archive']['type']['7z'];
  \$config['archive']['type']['tar'] = \$config['archive']['type']['7z'];
  \$config['archive']['type']['tar']['has_password'] = false;
  \$config['archive']['type']['bz2'] = \$config['archive']['type']['tar'];
  \$config['archive']['type']['gz'] = \$config['archive']['type']['tar'];
  \$config['archive']['type']['tar.7z'] = \$config['archive']['type']['tar'];
  \$config['archive']['type']['tar.bz2'] = \$config['archive']['type']['tar'];
  \$config['archive']['type']['tar.gz'] = \$config['archive']['type']['tar'];
  \$config['archive']['type']['tar.xz'] = \$config['archive']['type']['tar'];

  // multiple passes for archiving and compression
  \$config['archive']['type']['tar.gz']['multipass'] = ['tar', 'gzip'];
  \$config['archive']['type']['tar.bz2']['multipass'] = ['tar', 'bzip2'];
  \$config['archive']['type']['tar.7z']['multipass'] = ['tar', '7z'];
  \$config['archive']['type']['tar.xz']['multipass'] = ['tar', 'xz'];
?>
EOF
		fi

		if [[ ! -d ${plugin_lib}ratiocolor ]]; then
			_execute "sudo svn co https://github.com/Gyran/rutorrent-ratiocolor.git/trunk ${plugin_lib}ratiocolor"
			sed -i "s/changeWhat = \"cell-background\";/changeWhat = \"font\";/g" ${plugin_lib}ratiocolor/init.js
		fi
		# if [[ ! -d ${plugin_lib}logoff ]]; then
		# 	cd ${plugin_lib} || { _error "Can not install ruTorrent logoff" && exit 1; }
		# 	_execute "wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/rutorrent-logoff/logoff-1.3.tar.gz"
		# 	_execute "tar xf logoff-1.3.tar.gz"
		# 	rm -rf logoff-1.3.tar.gz
		# fi
		if [[ ! -d ${plugin_lib}mobile ]]; then
			_execute "sudo git clone https://github.com/xombiemp/rutorrentMobile.git ${plugin_lib}mobile"
		fi
		if [[ ! -d ${plugin_lib}stream ]]; then
			_execute "sudo svn co https://github.com/hashknot/rutorrent-stream/trunk/stream ${plugin_lib}stream"
		fi
	fi
	rm -rf /srv/rutorrent/plugins/_cloudflare

	_info "Initializing ruTorrent plugins... "
	cd /srv/rutorrent/ || { _error "Can not install ruTorrent" && exit 1; }
	sed -i 's/useExternal = false;/useExternal = "mktorrent";/' /srv/rutorrent/plugins/create/conf.php
	sed -i 's/pathToCreatetorrent = '\'\''/pathToCreatetorrent = '\''\/usr\/bin\/mktorrent'\''/' /srv/rutorrent/plugins/create/conf.php
	sed -i "s/\$pathToExternals\['sox'\] = ''/\$pathToExternals\['sox'\] = '\/usr\/bin\/sox'/g" /srv/rutorrent/plugins/spectrogram/conf.php

	if [[ ! -d /srv/rutorrent/plugins/theme/themes/club-QuickBox ]]; then
		cd /srv/rutorrent/plugins/theme/themes || { _error "Can not install ruTorrent theme " && exit 1; }
		_execute "sudo git clone https://lab.quickbox.io/QuickBox/club-QuickBox.git club-QuickBox"
		sudo perl -pi -e "s/\$defaultTheme \= \"\"\;/\$defaultTheme \= \"club-QuickBox\"\;/g" /srv/rutorrent/plugins/theme/conf.php
	fi

	if [[ ! -d /srv/rutorrent/plugins/filemanager ]]; then
		cd /srv/rutorrent/plugins/ || { _error "Can not install ruTorrent filemanager" && exit 1; }
		cp -R ${plugin_lib}filemanager .
		chown -R www-data: /srv/rutorrent/plugins/filemanager
	fi

	if [[ ! -d /srv/rutorrent/plugins/ratiocolor ]]; then
		cd /srv/rutorrent/plugins || { _error "Can not install ruTorrent ratiocolor" && exit 1; }
		cp -R ${plugin_lib}ratiocolor .
		sed -i "s/changeWhat = \"cell-background\";/changeWhat = \"font\";/g" /srv/rutorrent/plugins/ratiocolor/init.js
	fi

	if [[ ! -d /srv/rutorrent/plugins/mobile ]]; then
		cd /srv/rutorrent/plugins || { _error "Can not install ruTorrent mobile" && exit 1; }
		cp -R ${plugin_lib}mobile .
		chown -R www-data: mobile
	fi

	# if [[ ! -d /srv/rutorrent/plugins/logoff ]]; then
	# 	cd /srv/rutorrent/plugins || { _error "Can not install ruTorrent logoff" && exit 1; }
	# 	cp -R ${plugin_lib}logoff .
	# 	chown -R www-data: logoff
	# fi

	if [[ ! -d /srv/rutorrent/plugins/stream ]]; then
		cd /srv/rutorrent/plugins || { _error "Can not install ruTorrent stream" && exit 1; }
		cp -R ${plugin_lib}stream .
		chown -R www-data: stream
	fi

	_info "Setting up configs for ruTorrent... "

	cat >/srv/rutorrent/conf/config.php <<EOF
<?php
	// configuration parameters

	// for snoopy client
	\$httpUserAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36';
	\$httpTimeOut = 30; // in seconds
	\$httpUseGzip = true;
	\$httpIP = null;				// IP string. Or null for any.
	\$httpProxy = array
	(
		'use' 	=> false,
		'proto'	=> 'http',		// 'http' or 'https'
		'host'	=> 'PROXY_HOST_HERE',
		'port'	=> 3128
	);

	// for xmlrpc actions
	\$rpcTimeOut = 5; // in seconds
	\$rpcLogCalls = false;
	\$rpcLogFaults = true;

	// for php
	\$phpUseGzip = false;
	\$phpGzipLevel = 2;

	\$schedule_rand = 10;			// rand for schedulers start, +0..X seconds

	\$do_diagnostic = true;			// Diagnose ruTorrent. Recommended to keep enabled, unless otherwise required.
	\$al_diagnostic = true;			// Diagnose auto-loader. Set to "false" to make composer plugins work.
	
	\$log_file = '/tmp/rutorrent_errors.log';		// path to log file (comment or leave blank to disable logging)

	\$saveUploadedTorrents = true;		// Save uploaded torrents to profile/torrents directory or not
	\$overwriteUploadedTorrents = false;     // Overwrite existing uploaded torrents in profile/torrents directory or make unique name

    \$topDirectory = '/home'; // Upper available directory. Absolute path with trail slash
	\$forbidUserSettings = false;

	//\$scgi_port = 5000;
	//\$scgi_host = "127.0.0.1";

	// For web->rtorrent link through unix domain socket 
	// (scgi_local in rtorrent conf file), change variables 
	// above to something like this:
	//
	// \$scgi_port = 0;
	// \$scgi_host = "unix:///tmp/rpc.socket";

	\$XMLRPCMountPoint = "/RPC2";		// DO NOT DELETE THIS LINE!!! DO NOT COMMENT THIS LINE!!!
	
	\$throttleMaxSpeed = 327625*1024;	// DO NOT EDIT THIS LINE!!! DO NOT COMMENT THIS LINE!!!
	// Can't be greater then 327625*1024 due to limitation in libtorrent ResourceManager::set_max_upload_unchoked function.

	\$pathToExternals = array(
		"php" => '/usr/bin/php', // Something like /usr/bin/php. If empty, will be found in PATH.
		"curl" => '/usr/bin/curl', // Something like /usr/bin/curl. If empty, will be found in PATH.
		"gzip" => '/bin/gzip', // Something like /usr/bin/gzip. If empty, will be found in PATH.
		"id" => '/usr/bin/id', // Something like /usr/bin/id. If empty, will be found in PATH.
		"stat" => '/usr/bin/stat', // Something like /usr/bin/stat. If empty, will be found in PATH.
		"bzip2" => '/bin/bzip2',
	);

	\$localhosts = array( 			// list of local interfaces
		"127.0.0.1",
		"localhost",
	);

	\$profilePath = '../share';		// Path to user profiles
	\$profileMask = 0777;			// Mask for files and directory creation in user profiles.
						// Both Webserver and rtorrent users must have read-write access to it.
						// For example, if Webserver and rtorrent users are in the same group then the value may be 0770.

	\$tempDirectory = null;			// Temp directory. Absolute path with trail slash. If null, then autodetect will be used.

	\$canUseXSendFile = false;		// If true then use X-Sendfile feature if it exist

	\$locale = "UTF8";

	\$enableCSRFCheck = false;		// If true then Origin and Referer will be checked
	\$enabledOrigins = array();		// List of enabled domains for CSRF check (only hostnames, without protocols, port etc.).
						// If empty, then will retrieve domain from HTTP_HOST / HTTP_X_FORWARDED_HOST

EOF
	cat >/srv/rutorrent/plugins/_task/conf.php <<TAS
<?php
// configuration parameters
\$pathToExternals['pgrep'] = '/usr/bin/pgrep';
\$maxConcurentTasks      = 3;
\$showTabAlways          = 1;
TAS
	userlist=$(cat $(find /root/.qbuser/ -type f) | cut -d: -f1)
	for username in $userlist; do
		if [[ ! -f /srv/rutorrent/conf/users/${username}/config.php ]]; then
			mkdir -p /srv/rutorrent/conf/users/${username}/
		fi
		cat >/srv/rutorrent/conf/users/${username}/config.php <<RUCONF
<?php
\$topDirectory = '/home/${username}';
\$scgi_port = 0;
\$scgi_host = "unix:///var/run/${username}/.rtorrent.sock";
\$XMLRPCMountPoint = "/${username}";
\$quotaUser = "${username}";
?>
RUCONF
	done
	_info "Starting ${APP_TITLE}..."
	# schedule restart service
	at now + 1 minute >>"${OUTTO}" 2>&1 <<EOF
sleep 5;\
/usr/local/bin/quickbox/system/auxiliary/php-fpm-cli -r 'opcache_reset();';\
systemctl restart php7.4-fpm;\
nginx -s reload
EOF
	_success "${APP_TITLE} is now update to date."
}

#################################################################################
# OPT GENERATOR
#################################################################################
if ! ARGS=$(getopt -a -o hl: -l help,log: -- "$@")
then
    _usage
    exit 1
fi
eval set -- "${ARGS}"
while true; do
	case "$1" in
	-h | --help)
		_usage
		exit 1
		;;
	-l | --log)
		OUTTO="$2"
		shift
		;;
	--)
		shift
		break
		;;
	esac
	shift
done

#################################################################################
# MAIN PROCESS
#################################################################################
_lockCheck
_setLock
_updateInfo
_installDepends
_updateApp
_lockCleanup
